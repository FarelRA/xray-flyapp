################################
# App configuration
# Name, Region, Env, and Machine

app = 'farel'
primary_region = 'sin'

[env]
  ParameterSSENCYPT = 'chacha20-ietf-poly1305'

[[vm]]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 256


################################
# Build and App configuration
# DO NOT CHANGE unless you know

kill_signal = 'SIGTERM'
kill_timeout = '2m0s'

[build]
  dockerfile = 'Dockerfile'
  build-target = 'main'


################################
# Caddy service (Port 80 and 443)
# Currently used for Xray routing

# Caddy TLS service
[[services]]
  protocol = 'tcp'
  internal_port = 8080

  [[services.ports]]
    port = 443
    handlers = ['tls']

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# Caddy non-TLS service
[[services]]
  protocol = 'tcp'
  internal_port = 8080

  [[services.ports]]
    port = 80

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768
    

################################
# frps configuration
# Web pannel and services port

# Web pannel on 8443
[[services]]
  protocol = 'tcp'
  internal_port = 8443

  [[services.ports]]
    port = 8443
    handlers = ['tls', 'http']

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# TCP connection service on 7000
[[services]]
  protocol = 'tcp'
  internal_port = 7000

  [[services.ports]]
    port = 7000

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# UDP (KCP) connection service on 7001
[[services]]
  protocol = 'udp'
  internal_port = 7001

  [[services.ports]]
    port = 7001

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# UDP (Quic) connection service on 7002
[[services]]
  protocol = 'udp'
  internal_port = 7002

  [[services.ports]]
    port = 7002

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768


################################
# frps port forward configuration
# port open by frps for reverse proxy

# Experimental port uses (TCP)
[[services]]
  protocol = 'tcp'
  internal_port = 3072

  [[services.ports]]
    port = 3072

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# Experimental port uses (UDP)
[[services]]
  protocol = 'udp'
  internal_port = 3072

  [[services.ports]]
    port = 3072

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# SSH service (TCP)
# Forwarded to 8022 then open to port 22 by fly
[[services]]
  protocol = 'tcp'
  internal_port = 8022

  [[services.ports]]
    port = 22

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# Minecraft Java (TCP)
[[services]]
  protocol = 'tcp'
  internal_port = 25565

  [[services.ports]]
    port = 25565

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768

# Minecraft Java (UDP)
[[services]]
  protocol = 'udp'
  internal_port = 19132

  [[services.ports]]
    port = 19132

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768


################################
# Expose tor socks5 proxy
# Because we have it, so why not

[[services]]
  protocol = 'tcp'
  internal_port = 9050

  [[services.ports]]
    port = 9050

  [services.concurrency]
    type = 'connections'
    hard_limit = 1024
    soft_limit = 768
